{"id":"node_modules/snabbdom/src/package/htmldomapi.ts","dependencies":[{"name":"D:\\Repo\\Daily-code\\Vue\\snabbdom-demo\\package.json","includedInParent":true,"mtime":1594121776499},{"name":"D:\\Repo\\Daily-code\\Vue\\snabbdom-demo\\node_modules\\snabbdom\\package.json","includedInParent":true,"mtime":1594117033108}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.htmlDomApi = void 0;\r\nfunction createElement(tagName) {\r\n    return document.createElement(tagName);\r\n}\r\nfunction createElementNS(namespaceURI, qualifiedName) {\r\n    return document.createElementNS(namespaceURI, qualifiedName);\r\n}\r\nfunction createTextNode(text) {\r\n    return document.createTextNode(text);\r\n}\r\nfunction createComment(text) {\r\n    return document.createComment(text);\r\n}\r\nfunction insertBefore(parentNode, newNode, referenceNode) {\r\n    parentNode.insertBefore(newNode, referenceNode);\r\n}\r\nfunction removeChild(node, child) {\r\n    node.removeChild(child);\r\n}\r\nfunction appendChild(node, child) {\r\n    node.appendChild(child);\r\n}\r\nfunction parentNode(node) {\r\n    return node.parentNode;\r\n}\r\nfunction nextSibling(node) {\r\n    return node.nextSibling;\r\n}\r\nfunction tagName(elm) {\r\n    return elm.tagName;\r\n}\r\nfunction setTextContent(node, text) {\r\n    node.textContent = text;\r\n}\r\nfunction getTextContent(node) {\r\n    return node.textContent;\r\n}\r\nfunction isElement(node) {\r\n    return node.nodeType === 1;\r\n}\r\nfunction isText(node) {\r\n    return node.nodeType === 3;\r\n}\r\nfunction isComment(node) {\r\n    return node.nodeType === 8;\r\n}\r\nexports.htmlDomApi = {\r\n    createElement: createElement,\r\n    createElementNS: createElementNS,\r\n    createTextNode: createTextNode,\r\n    createComment: createComment,\r\n    insertBefore: insertBefore,\r\n    removeChild: removeChild,\r\n    appendChild: appendChild,\r\n    parentNode: parentNode,\r\n    nextSibling: nextSibling,\r\n    tagName: tagName,\r\n    setTextContent: setTextContent,\r\n    getTextContent: getTextContent,\r\n    isElement: isElement,\r\n    isText: isText,\r\n    isComment: isComment,\r\n};\r\n"},"sourceMaps":{"js":{"version":3,"file":"htmldomapi.js","sourceRoot":"","sources":["node_modules/snabbdom/src/package/htmldomapi.ts"],"names":[],"mappings":";;;AAkBA,SAAS,aAAa,CAAE,OAAY;IAClC,OAAO,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;AACxC,CAAC;AAED,SAAS,eAAe,CAAE,YAAoB,EAAE,aAAqB;IACnE,OAAO,QAAQ,CAAC,eAAe,CAAC,YAAY,EAAE,aAAa,CAAC,CAAA;AAC9D,CAAC;AAED,SAAS,cAAc,CAAE,IAAY;IACnC,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA;AACtC,CAAC;AAED,SAAS,aAAa,CAAE,IAAY;IAClC,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;AACrC,CAAC;AAED,SAAS,YAAY,CAAE,UAAgB,EAAE,OAAa,EAAE,aAA0B;IAChF,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,aAAa,CAAC,CAAA;AACjD,CAAC;AAED,SAAS,WAAW,CAAE,IAAU,EAAE,KAAW;IAC3C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;AACzB,CAAC;AAED,SAAS,WAAW,CAAE,IAAU,EAAE,KAAW;IAC3C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;AACzB,CAAC;AAED,SAAS,UAAU,CAAE,IAAU;IAC7B,OAAO,IAAI,CAAC,UAAU,CAAA;AACxB,CAAC;AAED,SAAS,WAAW,CAAE,IAAU;IAC9B,OAAO,IAAI,CAAC,WAAW,CAAA;AACzB,CAAC;AAED,SAAS,OAAO,CAAE,GAAY;IAC5B,OAAO,GAAG,CAAC,OAAO,CAAA;AACpB,CAAC;AAED,SAAS,cAAc,CAAE,IAAU,EAAE,IAAmB;IACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;AACzB,CAAC;AAED,SAAS,cAAc,CAAE,IAAU;IACjC,OAAO,IAAI,CAAC,WAAW,CAAA;AACzB,CAAC;AAED,SAAS,SAAS,CAAE,IAAU;IAC5B,OAAO,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAA;AAC5B,CAAC;AAED,SAAS,MAAM,CAAE,IAAU;IACzB,OAAO,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAA;AAC5B,CAAC;AAED,SAAS,SAAS,CAAE,IAAU;IAC5B,OAAO,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAA;AAC5B,CAAC;AAEY,QAAA,UAAU,GAAW;IAChC,aAAa,eAAA;IACb,eAAe,iBAAA;IACf,cAAc,gBAAA;IACd,aAAa,eAAA;IACb,YAAY,cAAA;IACZ,WAAW,aAAA;IACX,WAAW,aAAA;IACX,UAAU,YAAA;IACV,WAAW,aAAA;IACX,OAAO,SAAA;IACP,cAAc,gBAAA;IACd,cAAc,gBAAA;IACd,SAAS,WAAA;IACT,MAAM,QAAA;IACN,SAAS,WAAA;CACV,CAAA","sourcesContent":["export interface DOMAPI {\n  createElement: (tagName: any) => HTMLElement\n  createElementNS: (namespaceURI: string, qualifiedName: string) => Element\n  createTextNode: (text: string) => Text\n  createComment: (text: string) => Comment\n  insertBefore: (parentNode: Node, newNode: Node, referenceNode: Node | null) => void\n  removeChild: (node: Node, child: Node) => void\n  appendChild: (node: Node, child: Node) => void\n  parentNode: (node: Node) => Node | null\n  nextSibling: (node: Node) => Node | null\n  tagName: (elm: Element) => string\n  setTextContent: (node: Node, text: string | null) => void\n  getTextContent: (node: Node) => string | null\n  isElement: (node: Node) => node is Element\n  isText: (node: Node) => node is Text\n  isComment: (node: Node) => node is Comment\n}\n\nfunction createElement (tagName: any): HTMLElement {\n  return document.createElement(tagName)\n}\n\nfunction createElementNS (namespaceURI: string, qualifiedName: string): Element {\n  return document.createElementNS(namespaceURI, qualifiedName)\n}\n\nfunction createTextNode (text: string): Text {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text: string): Comment {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode: Node, newNode: Node, referenceNode: Node | null): void {\n  parentNode.insertBefore(newNode, referenceNode)\n}\n\nfunction removeChild (node: Node, child: Node): void {\n  node.removeChild(child)\n}\n\nfunction appendChild (node: Node, child: Node): void {\n  node.appendChild(child)\n}\n\nfunction parentNode (node: Node): Node | null {\n  return node.parentNode\n}\n\nfunction nextSibling (node: Node): Node | null {\n  return node.nextSibling\n}\n\nfunction tagName (elm: Element): string {\n  return elm.tagName\n}\n\nfunction setTextContent (node: Node, text: string | null): void {\n  node.textContent = text\n}\n\nfunction getTextContent (node: Node): string | null {\n  return node.textContent\n}\n\nfunction isElement (node: Node): node is Element {\n  return node.nodeType === 1\n}\n\nfunction isText (node: Node): node is Text {\n  return node.nodeType === 3\n}\n\nfunction isComment (node: Node): node is Comment {\n  return node.nodeType === 8\n}\n\nexport const htmlDomApi: DOMAPI = {\n  createElement,\n  createElementNS,\n  createTextNode,\n  createComment,\n  insertBefore,\n  removeChild,\n  appendChild,\n  parentNode,\n  nextSibling,\n  tagName,\n  setTextContent,\n  getTextContent,\n  isElement,\n  isText,\n  isComment,\n}\n"]}},"error":null,"hash":"4525346cc78686601d987fa3e69520e9","cacheData":{"env":{}}}