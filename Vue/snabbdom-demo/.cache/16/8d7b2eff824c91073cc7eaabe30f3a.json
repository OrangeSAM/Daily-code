{"id":"node_modules/snabbdom/src/package/init.ts","dependencies":[{"name":"D:\\Repo\\Daily-code\\Vue\\snabbdom-demo\\package.json","includedInParent":true,"mtime":1594121776499},{"name":"D:\\Repo\\Daily-code\\Vue\\snabbdom-demo\\node_modules\\snabbdom\\package.json","includedInParent":true,"mtime":1594117033108},{"name":"./vnode","loc":{"line":23,"column":22},"parent":"D:\\Repo\\Daily-code\\Vue\\snabbdom-demo\\node_modules\\snabbdom\\src\\package\\init.ts","resolved":"D:\\Repo\\Daily-code\\Vue\\snabbdom-demo\\node_modules\\snabbdom\\src\\package\\vnode.ts"},{"name":"./is","loc":{"line":24,"column":30},"parent":"D:\\Repo\\Daily-code\\Vue\\snabbdom-demo\\node_modules\\snabbdom\\src\\package\\init.ts","resolved":"D:\\Repo\\Daily-code\\Vue\\snabbdom-demo\\node_modules\\snabbdom\\src\\package\\is.ts"},{"name":"./htmldomapi","loc":{"line":25,"column":27},"parent":"D:\\Repo\\Daily-code\\Vue\\snabbdom-demo\\node_modules\\snabbdom\\src\\package\\init.ts","resolved":"D:\\Repo\\Daily-code\\Vue\\snabbdom-demo\\node_modules\\snabbdom\\src\\package\\htmldomapi.ts"}],"generated":{"js":"\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.init = void 0;\r\nvar vnode_1 = require(\"./vnode\");\r\nvar is = __importStar(require(\"./is\"));\r\nvar htmldomapi_1 = require(\"./htmldomapi\");\r\nfunction isUndef(s) {\r\n    return s === undefined;\r\n}\r\nfunction isDef(s) {\r\n    return s !== undefined;\r\n}\r\nvar emptyNode = vnode_1.vnode('', {}, [], undefined, undefined);\r\nfunction sameVnode(vnode1, vnode2) {\r\n    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\r\n}\r\nfunction isVnode(vnode) {\r\n    return vnode.sel !== undefined;\r\n}\r\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\r\n    var _a;\r\n    var map = {};\r\n    for (var i = beginIdx; i <= endIdx; ++i) {\r\n        var key = (_a = children[i]) === null || _a === void 0 ? void 0 : _a.key;\r\n        if (key !== undefined) {\r\n            map[key] = i;\r\n        }\r\n    }\r\n    return map;\r\n}\r\nvar hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];\r\nfunction init(modules, domApi) {\r\n    var i;\r\n    var j;\r\n    var cbs = {\r\n        create: [],\r\n        update: [],\r\n        remove: [],\r\n        destroy: [],\r\n        pre: [],\r\n        post: []\r\n    };\r\n    var api = domApi !== undefined ? domApi : htmldomapi_1.htmlDomApi;\r\n    for (i = 0; i < hooks.length; ++i) {\r\n        cbs[hooks[i]] = [];\r\n        for (j = 0; j < modules.length; ++j) {\r\n            var hook = modules[j][hooks[i]];\r\n            if (hook !== undefined) {\r\n                cbs[hooks[i]].push(hook);\r\n            }\r\n        }\r\n    }\r\n    function emptyNodeAt(elm) {\r\n        var id = elm.id ? '#' + elm.id : '';\r\n        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';\r\n        return vnode_1.vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);\r\n    }\r\n    function createRmCb(childElm, listeners) {\r\n        return function rmCb() {\r\n            if (--listeners === 0) {\r\n                var parent = api.parentNode(childElm);\r\n                api.removeChild(parent, childElm);\r\n            }\r\n        };\r\n    }\r\n    function createElm(vnode, insertedVnodeQueue) {\r\n        var _a, _b;\r\n        var i;\r\n        var data = vnode.data;\r\n        if (data !== undefined) {\r\n            var init_1 = (_a = data.hook) === null || _a === void 0 ? void 0 : _a.init;\r\n            if (isDef(init_1)) {\r\n                init_1(vnode);\r\n                data = vnode.data;\r\n            }\r\n        }\r\n        var children = vnode.children;\r\n        var sel = vnode.sel;\r\n        if (sel === '!') {\r\n            if (isUndef(vnode.text)) {\r\n                vnode.text = '';\r\n            }\r\n            vnode.elm = api.createComment(vnode.text);\r\n        }\r\n        else if (sel !== undefined) {\r\n            // Parse selector\r\n            var hashIdx = sel.indexOf('#');\r\n            var dotIdx = sel.indexOf('.', hashIdx);\r\n            var hash = hashIdx > 0 ? hashIdx : sel.length;\r\n            var dot = dotIdx > 0 ? dotIdx : sel.length;\r\n            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;\r\n            var elm = vnode.elm = isDef(data) && isDef(i = data.ns)\r\n                ? api.createElementNS(i, tag)\r\n                : api.createElement(tag);\r\n            if (hash < dot)\r\n                elm.setAttribute('id', sel.slice(hash + 1, dot));\r\n            if (dotIdx > 0)\r\n                elm.setAttribute('class', sel.slice(dot + 1).replace(/\\./g, ' '));\r\n            for (i = 0; i < cbs.create.length; ++i)\r\n                cbs.create[i](emptyNode, vnode);\r\n            if (is.array(children)) {\r\n                for (i = 0; i < children.length; ++i) {\r\n                    var ch = children[i];\r\n                    if (ch != null) {\r\n                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));\r\n                    }\r\n                }\r\n            }\r\n            else if (is.primitive(vnode.text)) {\r\n                api.appendChild(elm, api.createTextNode(vnode.text));\r\n            }\r\n            var hook = vnode.data.hook;\r\n            if (isDef(hook)) {\r\n                (_b = hook.create) === null || _b === void 0 ? void 0 : _b.call(hook, emptyNode, vnode);\r\n                if (hook.insert) {\r\n                    insertedVnodeQueue.push(vnode);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            vnode.elm = api.createTextNode(vnode.text);\r\n        }\r\n        return vnode.elm;\r\n    }\r\n    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\r\n        for (; startIdx <= endIdx; ++startIdx) {\r\n            var ch = vnodes[startIdx];\r\n            if (ch != null) {\r\n                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\r\n            }\r\n        }\r\n    }\r\n    function invokeDestroyHook(vnode) {\r\n        var _a, _b;\r\n        var data = vnode.data;\r\n        if (data !== undefined) {\r\n            (_b = (_a = data === null || data === void 0 ? void 0 : data.hook) === null || _a === void 0 ? void 0 : _a.destroy) === null || _b === void 0 ? void 0 : _b.call(_a, vnode);\r\n            for (var i_1 = 0; i_1 < cbs.destroy.length; ++i_1)\r\n                cbs.destroy[i_1](vnode);\r\n            if (vnode.children !== undefined) {\r\n                for (var j_1 = 0; j_1 < vnode.children.length; ++j_1) {\r\n                    var child = vnode.children[j_1];\r\n                    if (child != null && typeof child !== 'string') {\r\n                        invokeDestroyHook(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\r\n        var _a, _b;\r\n        for (; startIdx <= endIdx; ++startIdx) {\r\n            var listeners = void 0;\r\n            var rm = void 0;\r\n            var ch = vnodes[startIdx];\r\n            if (ch != null) {\r\n                if (isDef(ch.sel)) {\r\n                    invokeDestroyHook(ch);\r\n                    listeners = cbs.remove.length + 1;\r\n                    rm = createRmCb(ch.elm, listeners);\r\n                    for (var i_2 = 0; i_2 < cbs.remove.length; ++i_2)\r\n                        cbs.remove[i_2](ch, rm);\r\n                    var removeHook = (_b = (_a = ch === null || ch === void 0 ? void 0 : ch.data) === null || _a === void 0 ? void 0 : _a.hook) === null || _b === void 0 ? void 0 : _b.remove;\r\n                    if (isDef(removeHook)) {\r\n                        removeHook(ch, rm);\r\n                    }\r\n                    else {\r\n                        rm();\r\n                    }\r\n                }\r\n                else { // Text node\r\n                    api.removeChild(parentElm, ch.elm);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\r\n        var oldStartIdx = 0;\r\n        var newStartIdx = 0;\r\n        var oldEndIdx = oldCh.length - 1;\r\n        var oldStartVnode = oldCh[0];\r\n        var oldEndVnode = oldCh[oldEndIdx];\r\n        var newEndIdx = newCh.length - 1;\r\n        var newStartVnode = newCh[0];\r\n        var newEndVnode = newCh[newEndIdx];\r\n        var oldKeyToIdx;\r\n        var idxInOld;\r\n        var elmToMove;\r\n        var before;\r\n        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\r\n            if (oldStartVnode == null) {\r\n                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\r\n            }\r\n            else if (oldEndVnode == null) {\r\n                oldEndVnode = oldCh[--oldEndIdx];\r\n            }\r\n            else if (newStartVnode == null) {\r\n                newStartVnode = newCh[++newStartIdx];\r\n            }\r\n            else if (newEndVnode == null) {\r\n                newEndVnode = newCh[--newEndIdx];\r\n            }\r\n            else if (sameVnode(oldStartVnode, newStartVnode)) {\r\n                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\r\n                oldStartVnode = oldCh[++oldStartIdx];\r\n                newStartVnode = newCh[++newStartIdx];\r\n            }\r\n            else if (sameVnode(oldEndVnode, newEndVnode)) {\r\n                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\r\n                oldEndVnode = oldCh[--oldEndIdx];\r\n                newEndVnode = newCh[--newEndIdx];\r\n            }\r\n            else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\r\n                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\r\n                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\r\n                oldStartVnode = oldCh[++oldStartIdx];\r\n                newEndVnode = newCh[--newEndIdx];\r\n            }\r\n            else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\r\n                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\r\n                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\r\n                oldEndVnode = oldCh[--oldEndIdx];\r\n                newStartVnode = newCh[++newStartIdx];\r\n            }\r\n            else {\r\n                if (oldKeyToIdx === undefined) {\r\n                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\r\n                }\r\n                idxInOld = oldKeyToIdx[newStartVnode.key];\r\n                if (isUndef(idxInOld)) { // New element\r\n                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\r\n                }\r\n                else {\r\n                    elmToMove = oldCh[idxInOld];\r\n                    if (elmToMove.sel !== newStartVnode.sel) {\r\n                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\r\n                    }\r\n                    else {\r\n                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\r\n                        oldCh[idxInOld] = undefined;\r\n                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\r\n                    }\r\n                }\r\n                newStartVnode = newCh[++newStartIdx];\r\n            }\r\n        }\r\n        if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\r\n            if (oldStartIdx > oldEndIdx) {\r\n                before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;\r\n                addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\r\n            }\r\n            else {\r\n                removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\r\n            }\r\n        }\r\n    }\r\n    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\r\n        var _a, _b, _c, _d, _e;\r\n        var hook = (_a = vnode.data) === null || _a === void 0 ? void 0 : _a.hook;\r\n        (_b = hook === null || hook === void 0 ? void 0 : hook.prepatch) === null || _b === void 0 ? void 0 : _b.call(hook, oldVnode, vnode);\r\n        var elm = vnode.elm = oldVnode.elm;\r\n        var oldCh = oldVnode.children;\r\n        var ch = vnode.children;\r\n        if (oldVnode === vnode)\r\n            return;\r\n        if (vnode.data !== undefined) {\r\n            for (var i_3 = 0; i_3 < cbs.update.length; ++i_3)\r\n                cbs.update[i_3](oldVnode, vnode);\r\n            (_d = (_c = vnode.data.hook) === null || _c === void 0 ? void 0 : _c.update) === null || _d === void 0 ? void 0 : _d.call(_c, oldVnode, vnode);\r\n        }\r\n        if (isUndef(vnode.text)) {\r\n            if (isDef(oldCh) && isDef(ch)) {\r\n                if (oldCh !== ch)\r\n                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);\r\n            }\r\n            else if (isDef(ch)) {\r\n                if (isDef(oldVnode.text))\r\n                    api.setTextContent(elm, '');\r\n                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\r\n            }\r\n            else if (isDef(oldCh)) {\r\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\r\n            }\r\n            else if (isDef(oldVnode.text)) {\r\n                api.setTextContent(elm, '');\r\n            }\r\n        }\r\n        else if (oldVnode.text !== vnode.text) {\r\n            if (isDef(oldCh)) {\r\n                removeVnodes(elm, oldCh, 0, oldCh.length - 1);\r\n            }\r\n            api.setTextContent(elm, vnode.text);\r\n        }\r\n        (_e = hook === null || hook === void 0 ? void 0 : hook.postpatch) === null || _e === void 0 ? void 0 : _e.call(hook, oldVnode, vnode);\r\n    }\r\n    return function patch(oldVnode, vnode) {\r\n        var i, elm, parent;\r\n        var insertedVnodeQueue = [];\r\n        for (i = 0; i < cbs.pre.length; ++i)\r\n            cbs.pre[i]();\r\n        if (!isVnode(oldVnode)) {\r\n            oldVnode = emptyNodeAt(oldVnode);\r\n        }\r\n        if (sameVnode(oldVnode, vnode)) {\r\n            patchVnode(oldVnode, vnode, insertedVnodeQueue);\r\n        }\r\n        else {\r\n            elm = oldVnode.elm;\r\n            parent = api.parentNode(elm);\r\n            createElm(vnode, insertedVnodeQueue);\r\n            if (parent !== null) {\r\n                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));\r\n                removeVnodes(parent, [oldVnode], 0, 0);\r\n            }\r\n        }\r\n        for (i = 0; i < insertedVnodeQueue.length; ++i) {\r\n            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);\r\n        }\r\n        for (i = 0; i < cbs.post.length; ++i)\r\n            cbs.post[i]();\r\n        return vnode;\r\n    };\r\n}\r\nexports.init = init;\r\n"},"sourceMaps":{"js":{"version":3,"file":"init.js","sourceRoot":"","sources":["node_modules/snabbdom/src/package/init.ts"],"names":[],"mappings":"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","sourcesContent":["import { Module } from './modules/module'\nimport { vnode, VNode } from './vnode'\nimport * as is from './is'\nimport { htmlDomApi, DOMAPI } from './htmldomapi'\n\ntype NonUndefined<T> = T extends undefined ? never : T\n\nfunction isUndef (s: any): boolean {\n  return s === undefined\n}\nfunction isDef<A> (s: A): s is NonUndefined<A> {\n  return s !== undefined\n}\n\ntype VNodeQueue = VNode[]\n\nconst emptyNode = vnode('', {}, [], undefined, undefined)\n\nfunction sameVnode (vnode1: VNode, vnode2: VNode): boolean {\n  return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel\n}\n\nfunction isVnode (vnode: any): vnode is VNode {\n  return vnode.sel !== undefined\n}\n\ntype KeyToIndexMap = {[key: string]: number}\n\ntype ArraysOf<T> = {\n  [K in keyof T]: Array<T[K]>;\n}\n\ntype ModuleHooks = ArraysOf<Required<Module>>\n\nfunction createKeyToOldIdx (children: VNode[], beginIdx: number, endIdx: number): KeyToIndexMap {\n  const map: KeyToIndexMap = {}\n  for (let i = beginIdx; i <= endIdx; ++i) {\n    const key = children[i]?.key\n    if (key !== undefined) {\n      map[key] = i\n    }\n  }\n  return map\n}\n\nconst hooks: Array<keyof Module> = ['create', 'update', 'remove', 'destroy', 'pre', 'post']\n\nexport function init (modules: Array<Partial<Module>>, domApi?: DOMAPI) {\n  let i: number\n  let j: number\n  const cbs: ModuleHooks = {\n    create: [],\n    update: [],\n    remove: [],\n    destroy: [],\n    pre: [],\n    post: []\n  }\n\n  const api: DOMAPI = domApi !== undefined ? domApi : htmlDomApi\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = []\n    for (j = 0; j < modules.length; ++j) {\n      const hook = modules[j][hooks[i]]\n      if (hook !== undefined) {\n        (cbs[hooks[i]] as any[]).push(hook)\n      }\n    }\n  }\n\n  function emptyNodeAt (elm: Element) {\n    const id = elm.id ? '#' + elm.id : ''\n    const c = elm.className ? '.' + elm.className.split(' ').join('.') : ''\n    return vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm: Node, listeners: number) {\n    return function rmCb () {\n      if (--listeners === 0) {\n        const parent = api.parentNode(childElm) as Node\n        api.removeChild(parent, childElm)\n      }\n    }\n  }\n\n  function createElm (vnode: VNode, insertedVnodeQueue: VNodeQueue): Node {\n    let i: any\n    let data = vnode.data\n    if (data !== undefined) {\n      const init = data.hook?.init\n      if (isDef(init)) {\n        init(vnode)\n        data = vnode.data\n      }\n    }\n    const children = vnode.children\n    const sel = vnode.sel\n    if (sel === '!') {\n      if (isUndef(vnode.text)) {\n        vnode.text = ''\n      }\n      vnode.elm = api.createComment(vnode.text!)\n    } else if (sel !== undefined) {\n      // Parse selector\n      const hashIdx = sel.indexOf('#')\n      const dotIdx = sel.indexOf('.', hashIdx)\n      const hash = hashIdx > 0 ? hashIdx : sel.length\n      const dot = dotIdx > 0 ? dotIdx : sel.length\n      const tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel\n      const elm = vnode.elm = isDef(data) && isDef(i = data.ns)\n        ? api.createElementNS(i, tag)\n        : api.createElement(tag)\n      if (hash < dot) elm.setAttribute('id', sel.slice(hash + 1, dot))\n      if (dotIdx > 0) elm.setAttribute('class', sel.slice(dot + 1).replace(/\\./g, ' '))\n      for (i = 0; i < cbs.create.length; ++i) cbs.create[i](emptyNode, vnode)\n      if (is.array(children)) {\n        for (i = 0; i < children.length; ++i) {\n          const ch = children[i]\n          if (ch != null) {\n            api.appendChild(elm, createElm(ch as VNode, insertedVnodeQueue))\n          }\n        }\n      } else if (is.primitive(vnode.text)) {\n        api.appendChild(elm, api.createTextNode(vnode.text))\n      }\n      const hook = vnode.data!.hook\n      if (isDef(hook)) {\n        hook.create?.(emptyNode, vnode)\n        if (hook.insert) {\n          insertedVnodeQueue.push(vnode)\n        }\n      }\n    } else {\n      vnode.elm = api.createTextNode(vnode.text!)\n    }\n    return vnode.elm\n  }\n\n  function addVnodes (\n    parentElm: Node,\n    before: Node | null,\n    vnodes: VNode[],\n    startIdx: number,\n    endIdx: number,\n    insertedVnodeQueue: VNodeQueue\n  ) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      const ch = vnodes[startIdx]\n      if (ch != null) {\n        api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before)\n      }\n    }\n  }\n\n  function invokeDestroyHook (vnode: VNode) {\n    const data = vnode.data\n    if (data !== undefined) {\n      data?.hook?.destroy?.(vnode)\n      for (let i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vnode)\n      if (vnode.children !== undefined) {\n        for (let j = 0; j < vnode.children.length; ++j) {\n          const child = vnode.children[j]\n          if (child != null && typeof child !== 'string') {\n            invokeDestroyHook(child)\n          }\n        }\n      }\n    }\n  }\n\n  function removeVnodes (parentElm: Node,\n    vnodes: VNode[],\n    startIdx: number,\n    endIdx: number): void {\n    for (; startIdx <= endIdx; ++startIdx) {\n      let listeners: number\n      let rm: () => void\n      const ch = vnodes[startIdx]\n      if (ch != null) {\n        if (isDef(ch.sel)) {\n          invokeDestroyHook(ch)\n          listeners = cbs.remove.length + 1\n          rm = createRmCb(ch.elm!, listeners)\n          for (let i = 0; i < cbs.remove.length; ++i) cbs.remove[i](ch, rm)\n          const removeHook = ch?.data?.hook?.remove\n          if (isDef(removeHook)) {\n            removeHook(ch, rm)\n          } else {\n            rm()\n          }\n        } else { // Text node\n          api.removeChild(parentElm, ch.elm!)\n        }\n      }\n    }\n  }\n\n  function updateChildren (parentElm: Node,\n    oldCh: VNode[],\n    newCh: VNode[],\n    insertedVnodeQueue: VNodeQueue) {\n    let oldStartIdx = 0\n    let newStartIdx = 0\n    let oldEndIdx = oldCh.length - 1\n    let oldStartVnode = oldCh[0]\n    let oldEndVnode = oldCh[oldEndIdx]\n    let newEndIdx = newCh.length - 1\n    let newStartVnode = newCh[0]\n    let newEndVnode = newCh[newEndIdx]\n    let oldKeyToIdx: KeyToIndexMap | undefined\n    let idxInOld: number\n    let elmToMove: VNode\n    let before: any\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (oldStartVnode == null) {\n        oldStartVnode = oldCh[++oldStartIdx] // Vnode might have been moved left\n      } else if (oldEndVnode == null) {\n        oldEndVnode = oldCh[--oldEndIdx]\n      } else if (newStartVnode == null) {\n        newStartVnode = newCh[++newStartIdx]\n      } else if (newEndVnode == null) {\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue)\n        oldStartVnode = oldCh[++oldStartIdx]\n        newStartVnode = newCh[++newStartIdx]\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue)\n        oldEndVnode = oldCh[--oldEndIdx]\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue)\n        api.insertBefore(parentElm, oldStartVnode.elm!, api.nextSibling(oldEndVnode.elm!))\n        oldStartVnode = oldCh[++oldStartIdx]\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue)\n        api.insertBefore(parentElm, oldEndVnode.elm!, oldStartVnode.elm!)\n        oldEndVnode = oldCh[--oldEndIdx]\n        newStartVnode = newCh[++newStartIdx]\n      } else {\n        if (oldKeyToIdx === undefined) {\n          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx)\n        }\n        idxInOld = oldKeyToIdx[newStartVnode.key as string]\n        if (isUndef(idxInOld)) { // New element\n          api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm!)\n        } else {\n          elmToMove = oldCh[idxInOld]\n          if (elmToMove.sel !== newStartVnode.sel) {\n            api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm!)\n          } else {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue)\n            oldCh[idxInOld] = undefined as any\n            api.insertBefore(parentElm, elmToMove.elm!, oldStartVnode.elm!)\n          }\n        }\n        newStartVnode = newCh[++newStartIdx]\n      }\n    }\n    if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n      if (oldStartIdx > oldEndIdx) {\n        before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm\n        addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue)\n      } else {\n        removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx)\n      }\n    }\n  }\n\n  function patchVnode (oldVnode: VNode, vnode: VNode, insertedVnodeQueue: VNodeQueue) {\n    const hook = vnode.data?.hook\n    hook?.prepatch?.(oldVnode, vnode)\n    const elm = vnode.elm = oldVnode.elm!\n    const oldCh = oldVnode.children as VNode[]\n    const ch = vnode.children as VNode[]\n    if (oldVnode === vnode) return\n    if (vnode.data !== undefined) {\n      for (let i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode)\n      vnode.data.hook?.update?.(oldVnode, vnode)\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue)\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) api.setTextContent(elm, '')\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue)\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1)\n      } else if (isDef(oldVnode.text)) {\n        api.setTextContent(elm, '')\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1)\n      }\n      api.setTextContent(elm, vnode.text!)\n    }\n    hook?.postpatch?.(oldVnode, vnode)\n  }\n\n  return function patch (oldVnode: VNode | Element, vnode: VNode): VNode {\n    let i: number, elm: Node, parent: Node\n    const insertedVnodeQueue: VNodeQueue = []\n    for (i = 0; i < cbs.pre.length; ++i) cbs.pre[i]()\n\n    if (!isVnode(oldVnode)) {\n      oldVnode = emptyNodeAt(oldVnode)\n    }\n\n    if (sameVnode(oldVnode, vnode)) {\n      patchVnode(oldVnode, vnode, insertedVnodeQueue)\n    } else {\n      elm = oldVnode.elm!\n      parent = api.parentNode(elm) as Node\n\n      createElm(vnode, insertedVnodeQueue)\n\n      if (parent !== null) {\n        api.insertBefore(parent, vnode.elm!, api.nextSibling(elm))\n        removeVnodes(parent, [oldVnode], 0, 0)\n      }\n    }\n\n    for (i = 0; i < insertedVnodeQueue.length; ++i) {\n      insertedVnodeQueue[i].data!.hook!.insert!(insertedVnodeQueue[i])\n    }\n    for (i = 0; i < cbs.post.length; ++i) cbs.post[i]()\n    return vnode\n  }\n}\n"]}},"error":null,"hash":"219cbb086c89fa39d169b0807524c0e2","cacheData":{"env":{}}}